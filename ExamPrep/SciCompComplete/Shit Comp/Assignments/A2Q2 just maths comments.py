import numpy as np

# Fourier law of heat conducion..........Q_x = -k * (dT/dx)

# data from table in Q
x = np.array([0.0,0.1,0.2,0.3]) # distance in m along path of heat flow
T = np.array([15,10,5,5],dtype=float) # temperature in degrees

# Taylor expansion
# T(x+h) = T(x) + hT'(x) + [h^2 / 2!] T''(x) + [h^3 / 3!] T'''(x)
# T(x+h) = T(x) + hT'(x) + [h^2 / 2] T''(x) + [h^3 / 6] T'''(x)

# T(x+2h) = T(x) + 2hT'(x) + [ (2h)^2 / 2!] T''(x) + [ (2h)^3 / 3! ] T'''(x) 
# T(x+2h) = T(x) + 2hT'(x) + [ 4h^2 / 2!] T''(x) + [ 8h^3 / 3! ]T'''(x)
# T(x+2h) = T(x) + 2hT'(x) + [2h^2] T''(x) + [(4/3)h^3]T'''(x)

# T(x+3h) = T(x) + 3hT'(x) + [ (3h)^2 / 2!] T''(x) + [ (3h)^3 / 3! ] T'''(x) 
# T(x+3h) = T(x) + 3hT'(x) + [ (9h^2) / 2!] T''(x) + [ (27h^3) / 3! ] T'''(x) 
# T(x+3h) = T(x) + 3hT'(x) + [(9/2)h^2] T''(x) + [(9/2)h^3] T'''(x) 

# Name the equations:

# A = T(x+h) = T(x) + hT'(x) + [h^2 / 2] T''(x) + [h^3 / 6] T'''(x)
# B = T(x+2h) = T(x) + 2hT'(x) + [2h^2] T''(x) + [(4/3)h^3]T'''(x)
# C = T(x+3h) = T(x) + 3hT'(x) + [(9/2)h^2] T''(x) + [(9/2)h^3] T'''(x) 

# Rearrange A for T'''(x):
# T(x+h) - T(x) - hT'(x) - [h^2 / 2] T''(x) = [h^3 / 6] T'''(x)
# T'''(x) = [6 / h^3] * [T(x+h) - T(x) - hT'(x) - [h^2 / 2] T''(x)]

# Rearrange B for T''(x)
# T(x+2h) = T(x) + 2hT'(x) + [2h^2] T''(x) + [(4/3)h^3]T'''(x)
# [2h^2] T''(x) = T(x+2h) - T(x) - 2hT'(x) - [(4/3)h^3]T'''(x)
# T''(x) = [1/(2h^2)] * [ T(x+2h) - T(x) - 2hT'(x) - [(4/3)h^3]T'''(x) 

# Substitute T'''(x) into our T''(x) equation

# T''(x) = [1/(2h^2)] * [ T(x+2h) - T(x) - 2hT'(x) - [(4/3)h^3] * [6 / h^3] * [T(x+h) - T(x) - hT'(x) - [h^2 / 2] T''(x)]
# T''(x) = [1/(2h^2)] * [ T(x+2h) - T(x) - 2hT'(x) - 8 * [T(x+h) - T(x) - hT'(x) - [h^2 / 2] T''(x)]
# T''(x) = [1/(2h^2)] * [ T(x+2h) - T(x) - 2hT'(x) - 8*T(x+h) - 8*T(x) - 8*hT'(x) - (4*h^2) T''(x)]
# T''(x) = [1/(2h^2)] * T(x+2h) - [1/(2h^2)] * T(x) - [1/h] * T'(x) - [4/h^2] * T(x+h) -[4/h^2] * T(x) - [4/h] * T'(x) - 2 T''(x)

#Plug in values to rearrange
# T''(x) + 2 T''(x) = [1/(2*(0.1^2))] * [5] - [1/(2*(0.1^2)] * T(x) - [1/0.1] * T'(x) - [4/(0.1^2)] * [10] -[4/(0.1^2)] * T(x) - [4/0.1] * T'(x)
# T''(x) = (1/3) * [ (250) - (50)*T(x) - 10*T'(x) - (4000) - 400*T(x) - 40*T'(x)]
# T''(x) = (1/3) * [ (250-4000) - (50-400)*T(x) - (10-40)*T'(x) ]
# T''(x) = (1/3) * [ (-3750) - (350)*T(x) - (30)*T'(x) ]
# T''(x) =  -(350/3)*T(x) - 10*T'(x) - 1250
# T''(x) =  -(350/3)*(15)- 10*T'(x) - 1250
# T''(x) =  -1750 - 10*T'(x) - 1250
# T''(x) =  -3000 - 10*T'(x)

# Rearrange C for T''(x) and plug the above into it
# [(9/2)h^2] T''(x) = T(x+3h) - T(x) - 3hT'(x) - [(9/2)h^3] T'''(x)
# [(9/2)h^2] * [ -3000 - 10*T'(x) ] = T(x+3h) - T(x) - 3hT'(x) - [(9/2)h^3] T'''(x)

# Plug values in and rearrange for T'(x)
# [(9/2)*(0.1^2)] * [ -3000 - 10*T'(x) ] = (3) - (15) - (3*0.1)T'(x) - [(9/2)(0.1^3)] T'''(x)
# [0.045] * [ -3000 - 10*T'(x) ] = (3) - (15) - (0.3)*T'(x) - [0.0045]* T'''(x)
# - 135 - 0.45*T'(x) = (-12) - (0.3)*T'(x) - [0.0045]* T'''(x)
# - 0.45*T'(x) = (-12+135) - (0.3)*T'(x) - [0.0045]* T'''(x)
# - 0.45*T'(x) = (123) - (0.3)*T'(x) - [0.0045]* T'''(x)
# T'(x) = (123/0.45) - (0.3/0.45)*T'(x) - [0.01]* T'''(x)

# Plug in T'''(x)

# T'(x) = (123/0.45) - (0.3/0.45)*T'(x) - [0.01]*( [6 / h^3] * [T(x+h) - T(x) - hT'(x) - [h^2 / 2] T''(x)] ) 
# T'(x) = (123/0.45) - (0.3/0.45)*T'(x) - [0.01]*( [6 / (0.1^3)] * [10 - 15 - (0.1)*T'(x) - [(0.1^2) / 2] * T''(x)] ) 
# T'(x) = (123/0.45) - (0.3/0.45)*T'(x) - [0.01]*( [6000] * [ - 5 - (0.1)*T'(x) - [0.005] * T''(x)] ) 
# T'(x) = (123/0.45) - (0.3/0.45)*T'(x) - [60]* [ - 5 - (0.1)*T'(x) - [0.005] * T''(x)] 
# T'(x) = (123/0.45) - (0.3/0.45)*T'(x) - [ - 300 - (6)*T'(x) - [0.3] * T''(x)] 
# T'(x) = (123/0.45) - (0.3/0.45)*T'(x) + 300 + (6)*T'(x) + [0.3] * T''(x)] 
# T'(x) = [(123/0.45)+300] - [(0.3/0.45)+6]*T'(x) + [0.3] * T''(x)] 
# T'(x) = (123/0.45) - (0.3/0.45)*T'(x) + 300 + (6)*T'(x) + [0.3] * T''(x)] 
# T'(x) = [(123/0.45)+300] - [(0.3/0.45)+6]*T'(x) + [0.3] * T''(x)

# Plug in T''(x)

# T'(x) = [(123/0.45)+300] - [(0.3/0.45)+6]*T'(x) + [0.3] * [-3000 - 10*T'(x) 
# T'(x) = [(123/0.45)+300] - [(0.3/0.45)+6]*T'(x) - 900 - 3*T'(x)]
# T'(x) +[(0.3/0.45)+6]*T'(x) + 3*T'(x)]   = [(123/0.45)+300] -  900 
# [1 + [(0.3/0.45)+6] + 3] * T'(x) = [(123/0.45)+300] -  900 
# T'(x) = ( [(123/0.45)+300] -  900 ) / [1 + [(0.3/0.45)+6] + 3]

# T'(x) = - 30.625

# So if Q_x = 40 and Q_x = -k*(T'(x))
# Then - k = (Q_x)/(T'(x))

Qx = 40
dTdx = -30.625

k = -(Qx/dTdx)
print "The thermal constant k is equal to",round(k,3)

